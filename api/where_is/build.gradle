plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.parkjh'
version = '0.0.1-SNAPSHOT'
description = 'where_is_project'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Web (REST API 만들기)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Data JPA (ORM + Repository)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// H2 Database (인메모리 DB - 테스트용)
	runtimeOnly 'com.h2database:h2'

	// 롬복 (선택 - getter/setter 자동 생성)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	runtimeOnly 'mysql:mysql-connector-java:8.0.33'

	// Swagger (OpenAPI 3)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 설정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
	delete file(querydslDir)
}
